load_module /usr/lib/nginx/modules/ngx_http_js_module.so;
load_module /usr/lib/nginx/modules/ngx_http_unzip_module.so;

error_log stderr;
user nginx;

events {}

http {
  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  upstream nomad-websocket {
    ip_hash;
    server 127.0.0.1:4646;
  }

  charset utf-8;
  source_charset utf-8;
  charset_types text/xml text/plain text/vnd.wap.wml application/javascript application/json application/rss+xml;
  sendfile on;
  access_log off;
  server_tokens off;
  client_max_body_size 32m;
  client_body_buffer_size 32m;
  subrequest_output_buffer_size 32m;

  js_path "/etc/nginx/njs/";
  js_import api from api/v1.js;

  server {
    listen 80;

    add_header Access-Control-Allow-Origin '*' always;
    add_header Access-Control-Allow-Headers '*';
    add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, PATCH, DELETE';
    add_header 'X-Content-Type-Options' 'nosniff';
    proxy_hide_header Content-Security-Policy;
    proxy_read_timeout 600;
    proxy_connect_timeout 600;
    proxy_send_timeout 600;

    error_page 404 @404;
    error_page 502 @502;
    error_page 504 @504;
    error_page 403 @403;

    location @404 {
      internal;
      default_type application/json;

      return 404 '{"nginx":{"message":"The requested resource was not found on this server.","exception":"NotFoundError","status_code":404,"ok":false}}';
    }

    location @502 {
      internal;
      default_type application/json;

      return 502 '{"nginx":{"message":"There was a problem with the requested resource.","exception":"BadGatewayError","status_code":502,"ok":false}}';
    }

    location @504 {
      internal;
      default_type application/json;

      return 504 '{"nginx":{"message":"Request time-out.","exception":"RequestTimeoutError","status_code":504,"ok":false}}';
    }

    location @403 {
      internal;
      default_type application/json;

      return 403 '{"nginx":{"message":"You don\'t have permission to access this resource.","exception":"AccessDeniedError","status_code":403,"ok":false}}';
    }

    location /extract_from_zip_internal {
      internal;
      ngx_unzip;
    }

    location = /nginx/internal/resurrect {
      default_type application/json;

      allow 127.0.0.1/32;
      deny all;

      js_content api.resurrect;
    }

    location = /nginx/health {
      default_type application/json;

      return 200 '{"nginx":{"message":"nginx is OK.","ok":true}}';
    }

    location = /nginx/env {
      default_type application/json;

      js_content api.env;
    }

    location = /nomad/health {
      default_type application/json;

      proxy_pass http://127.0.0.1:4646/v1/agent/health;
    }

    location = /nomad/jobs/parse {
      default_type application/json;

      proxy_pass http://127.0.0.1:4646/v1/jobs/parse;
    }

    location /ui {
      proxy_buffering off;

      if ($http_referer ~ (/ui/consul)) {
        proxy_pass http://127.0.0.1:8500;
      }

      proxy_pass http://nomad-websocket;
    }

    location /v1 {
      proxy_buffering off;

      if ($http_referer ~ (/ui/consul)) {
        proxy_pass http://127.0.0.1:8500;
      }

      if ($http_referer ~ (/ui/jobs)) {
        proxy_pass http://127.0.0.1:4646;
      }

      proxy_hide_header Access-Control-Allow-Origin;
      proxy_pass http://nomad-websocket;
    }

    location /ui/consul {
      proxy_buffering off;
      proxy_pass http://127.0.0.1:8500;
    }

    location /api/v1 {
      default_type application/json;

      if ($request_method = OPTIONS ) {
        add_header Access-Control-Allow-Origin '*';
        add_header Access-Control-Allow-Headers '*';
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, PATCH, DELETE';

        return 200 '{}';
      }

      js_content api.v1;
    }

    include /var/lib/nomad/alloc/*/worker/local/workers.conf;

    location / {
      proxy_read_timeout 350s;
      proxy_intercept_errors on;
      proxy_pass http://nomad-websocket;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Origin "${scheme}://${proxy_host}";
      proxy_buffering off;
    }
  }
}
